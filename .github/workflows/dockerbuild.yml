name: Docker Build

on:
  schedule:
    - cron:  '0 0 * * *'
  push:
    branches:
      - master
  pull_request:

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      tags: ${{ steps.set-matrix.outputs.tags }}
    steps:
    - id: set-matrix
      run: |
        wget https://github.com/ericchiang/pup/releases/download/v0.4.0/pup_v0.4.0_linux_amd64.zip
        unzip pup_v0.4.0_linux_amd64.zip

        wget http://old.openzwave.com/downloads/ -O downloads.html
        VERSION1=$(cat downloads.html | ./pup '#pagecontent > table:nth-child(2) > tbody > tr:nth-child(2) > td:nth-child(1) text{}')
        VERSION2=$(cat downloads.html | ./pup '#pagecontent > table:nth-child(2) > tbody > tr:nth-child(3) > td:nth-child(1) text{}')
        VERSION3=$(cat downloads.html | ./pup '#pagecontent > table:nth-child(2) > tbody > tr:nth-child(4) > td:nth-child(1) text{}')
        MATRIX="{\"openzwave\":[\"git\",\"$VERSION1\",\"$VERSION2\",\"$VERSION3\"],\"dockerfile\":[\"alpine\",\"debian\",\"ubuntu\",\"centos8\"]}"
        TAGS=$(wget -q https://registry.hub.docker.com/v1/repositories/chrisns/openzwave/tags -O -)
        echo "::set-output name=matrix::$MATRIX"
        echo "::set-output name=tags::$TAGS"
  build:
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Set tag
        run: echo "BUILD_TAG=${{ matrix.dockerfile }}-${{ matrix.openzwave }}" >> $GITHUB_ENV
      - name: Check existing
        id: should
        run: echo "::set-output name=build::${{ matrix.openzwave == 'git' || !contains(fromJson(needs.matrix.outputs.tags).*.name , env.BUILD_TAG) }}"

      - uses: actions/checkout@v2
        if: ${{ matrix.openzwave == 'git'}}
        with:
          submodules: true

      - uses: actions/checkout@v2
        if: ${{ steps.should.outputs.build == 'true' && matrix.openzwave != 'git'}}

      - name: Determine supported build platforms
        if: ${{ steps.should.outputs.build == 'true' }}
        id: buildplatform
        run: echo ::set-output name=buildplatform::$(cat SupportedArch.${{ matrix.dockerfile }})

      - name: Get and extract stable ozw
        if: ${{ steps.should.outputs.build == 'true' && matrix.openzwave != 'git'}}
        run: |
          curl -o ozw.tar.gz http://old.openzwave.com/downloads/openzwave-${{ matrix.openzwave }}.tar.gz
          tar -xzvf ozw.tar.gz
          rm -rf open-zwave
          mv openzwave-${{ matrix.openzwave }} open-zwave
          mkdir -p .git/modules/open-zwave/refs/heads
          echo ${{ matrix.openzwave }} > .git/modules/open-zwave/refs/heads/master

      - name: Determine ozw version
        if: ${{ steps.should.outputs.build == 'true' }}
        id: ozw
        run: echo ::set-output name=version::$(cat git/modules/open-zwave/refs/heads/master})

      - name: Login to dockerhub
        if: ${{ steps.should.outputs.build == 'true' && github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/setup-buildx-action@v1
        if: ${{ steps.should.outputs.build == 'true' }}

      - name: build+push
        if: ${{ steps.should.outputs.build == 'true' }}
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile.${{ matrix.dockerfile }}
          platforms: ${{ steps.buildplatform.outputs.buildplatform }}
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            chrisns/openzwave:${{ matrix.dockerfile }}-${{ matrix.openzwave }}
            chrisns/openzwave:${{ matrix.dockerfile }}-sha-${{ steps.ozw.outputs.version }}
